y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
text=~text,
hoverinfo="text"
)
#########
#INCLUSION CONDITIONS
ppt_info %<>% mutate(
include_ppt = ifelse(total_trials==60 &
crit_nonempty_trials>=10 &
att_check>=.5 &
p_clickprenoun_nonempty<=5 &
avg_clicktime>=200,1,0)
)
ggplot(ppt_info, aes(y=factor(Participant),col=factor(att_check)))+
geom_point(aes(x=last_time,group=Participant))+facet_wrap(~include_ppt)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(2,"Dark2"),
text=~text,
hoverinfo="text"
)
require(RColorBrewer)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(2,"Dark2"),
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
size=3,
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
size=3,
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
size=~3,
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
size=~1,
text=~text,
hoverinfo="text"
)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
marker = list(size = 10),
text=~text,
hoverinfo="text"
)
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=last_time-first_time,
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=last_time-first_time1,
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
ppt_info$time_taken
?difftime
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=difftime(last_time,first_time1,units="mins"),
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
ppt_info$time_taken
qdata %>% filter(grepl("MTurk",Question)) %>% rename(
mturk_id = `Answers...`
) %>% select(Participant, mturk_id) %>% right_join(.,ppt_info) %>% print -> ppt_info
qdata %>% filter(grepl("language",Question)) %>% rename(
bilingual = `Answers...`
) %>% select(Participant, bilingual) %>% right_join(.,ppt_info) %>% print -> ppt_info
workers<-read_tsv("mturkers.csv")
workers %<>% mutate(
duplicated = duplicated(`WORKER ID`)
) %>% arrange(`WORKER ID`)
#########
#INCLUSION CONDITIONS
ppt_info %<>% mutate(
include_ppt = ifelse(total_trials==60 &
crit_nonempty_trials>=10 &
att_check>=.5 &
p_clickprenoun_nonempty<=5 &
avg_clicktime>=200,1,0)
)
ppt_trial_info %<>% mutate(
include_trial = ifelse(datapoints!=0 &
clicked!="none" &
clicktime>=200 &
audio_played==1, 1, 0)
)
ggplot(ppt_info, aes(y=factor(Participant),col=factor(att_check)))+
geom_point(aes(x=last_time,group=Participant))+facet_wrap(~include_ppt)
require(plotly)
require(RColorBrewer)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),
paste0("<b>time taken:</b>",time_taken),
sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
marker = list(size = 10),
text=~text,
hoverinfo="text"
)
ppt_trial_info$trialstart
ppt_trial_info$trialstart %>% hist
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart[trialstart>100]))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=difftime(last_time,first_time1,units="mins"),
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
qdata %>% filter(grepl("MTurk",Question)) %>% rename(
mturk_id = `Answers...`
) %>% select(Participant, mturk_id) %>% right_join(.,ppt_info) %>% print -> ppt_info
qdata %>% filter(grepl("language",Question)) %>% rename(
bilingual = `Answers...`
) %>% select(Participant, bilingual) %>% right_join(.,ppt_info) %>% print -> ppt_info
workers<-read_tsv("mturkers.csv")
workers %<>% mutate(
duplicated = duplicated(`WORKER ID`)
) %>% arrange(`WORKER ID`)
#########
#INCLUSION CONDITIONS
ppt_info %<>% mutate(
include_ppt = ifelse(total_trials==60 &
crit_nonempty_trials>=10 &
att_check>=.5 &
p_clickprenoun_nonempty<=5 &
avg_clicktime>=200,1,0)
)
ppt_trial_info %<>% mutate(
include_trial = ifelse(datapoints!=0 &
clicked!="none" &
clicktime>=200 &
audio_played==1, 1, 0)
)
ggplot(ppt_info, aes(y=factor(Participant),col=factor(att_check)))+
geom_point(aes(x=last_time,group=Participant))+facet_wrap(~include_ppt)
require(plotly)
require(RColorBrewer)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),
paste0("<b>time taken:</b>",time_taken),
sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
marker = list(size = 10),
text=~text,
hoverinfo="text"
)
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart[trialstart>100]))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=difftime(last_time,first_time1,units="mins"),
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
ppt_info$first_time1
ppt_trial_info$trialstart
ppt_trial_info$trialstart %>% summary
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart[trialstart>946684800
]))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=difftime(last_time,first_time1,units="mins"),
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
qdata %>% filter(grepl("MTurk",Question)) %>% rename(
mturk_id = `Answers...`
) %>% select(Participant, mturk_id) %>% right_join(.,ppt_info) %>% print -> ppt_info
qdata %>% filter(grepl("language",Question)) %>% rename(
bilingual = `Answers...`
) %>% select(Participant, bilingual) %>% right_join(.,ppt_info) %>% print -> ppt_info
workers<-read_tsv("mturkers.csv")
workers %<>% mutate(
duplicated = duplicated(`WORKER ID`)
) %>% arrange(`WORKER ID`)
#########
#INCLUSION CONDITIONS
ppt_info %<>% mutate(
include_ppt = ifelse(total_trials==60 &
crit_nonempty_trials>=10 &
att_check>=.5 &
p_clickprenoun_nonempty<=5 &
avg_clicktime>=200,1,0)
)
ppt_trial_info %<>% mutate(
include_trial = ifelse(datapoints!=0 &
clicked!="none" &
clicktime>=200 &
audio_played==1, 1, 0)
)
ggplot(ppt_info, aes(y=factor(Participant),col=factor(att_check)))+
geom_point(aes(x=last_time,group=Participant))+facet_wrap(~include_ppt)
require(plotly)
require(RColorBrewer)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),
paste0("<b>time taken:</b>",time_taken),
sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
marker = list(size = 10),
text=~text,
hoverinfo="text"
)
ggplot(ppt_info, aes(y=factor(Participant),col=factor(att_check)))+
geom_point(aes(x=last_time,group=Participant))+facet_wrap(~include_ppt)
ggplot(ppt_info, aes(y=factor(Participant),col=factor(att_check)))+
geom_point(aes(x=first_time1,group=Participant))+
geom_point(aes(x=last_time,group=Participant))+facet_wrap(~include_ppt)
require(plotly)
require(RColorBrewer)
ppt_info %>% mutate(
text = paste(mturk_id,paste0("<b>include:</b>",include_ppt),
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),
paste0("<b>time taken:</b>",time_taken),
sep="<br>")
) %>%
plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(4,"Dark2")[c(4,1)],
marker = list(size = 10),
text=~text,
hoverinfo="text"
)
