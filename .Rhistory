att_check = first(att_check),
clicked=first(clicked),
condition=first(Condition),
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_trial_info
#are there any participants who did it repeatedly?
ppt_trial_info %>% group_by(Participant) %>%
summarise(
total_trials = n_distinct(Trial),
empty_trials=sum(datapoints==0),
crit_trials = n_distinct(Trial[condition!="Filler"]),
crit_nonempty_trials = n_distinct(Trial[condition!="Filler" & datapoints!=0]),
att_check = first(att_check),
n_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T),
p_clickprenoun_nonempty = sum(!is.na(clicked) & datapoints!=0 & (clicktime<=0|audio_played==0),na.rm=T)/total_trials*100,
avg_clicktime = mean(clicktime,na.rm=T),
first_time1=as.POSIXct(as.integer(as.numeric(as.character(min(trialstart[trialstart>946684800
]))) / 1000.0), origin='1970-01-01', tz="GMT"),
last_time=as.POSIXct(as.integer(as.numeric(as.character(max(trialstart))) / 1000.0), origin='1970-01-01', tz="GMT"),
time_taken=difftime(last_time,first_time1,units="mins"),
Browser = first(Browser),
Version=first(Version),
OS = first(OS)
) %>% print -> ppt_info
View(ppt_info)
qdata %>% filter(grepl("language",Question)) %>% rename(
bilingual = `Answers...`) %>%
mutate(bilingual2 = fct_recode(factor(bilingual),
"Monolingual"="No",
"Monolingual"="No - Only English",
"Bilingual"="Yes - English and some other language",
"Non-native"="Yes - Some other language and not English",
"maybe"="Yes")
) %>% group_by(Participant) %>%
summarise(bilingual=first(bilingual),
bilingual2=first(bilingual2)) %>%
right_join(.,ppt_info) %>%
print -> ppt_info
#join the side clicks from beginning
left_join(ppt_info, side_clicks) -> ppt_info
#########
#INCLUSION CONDITIONS
ppt_info %<>% mutate(
include_ppt = ifelse(total_trials>=55 &
crit_nonempty_trials>=10 &
att_check>=.5 &
p_clickprenoun_nonempty<=10 &
Lside_clicks>=.1 & Lside_clicks<=.9 &
avg_clicktime>=200,"valid","invalid"),
duplicate2="n-dup"
)
ppt_trial_info %<>% mutate(
include_trial = ifelse(datapoints!=0 &
clicked!="none" &
clicktime>=200 &
audio_played==1, "valid","invalid")
)
ppt_info %>% select(include_ppt) %>% table
require(plotly)
require(RColorBrewer)
ppt_info %>% mutate(
text = paste(
Participant,
paste0("<b>p_earlyclick:</b>",p_clickprenoun_nonempty,"%"),
paste0("<b>p_leftsideclicks:</b>",Lside_clicks),
paste0("<b>av clicktime:</b>",avg_clicktime),
paste0("<b>total trials:</b>",total_trials),
paste0("<b>non empty crit trials:</b>",crit_nonempty_trials),
paste0("<b>att check:</b>",att_check),
paste0("<b>time taken:</b>",time_taken),
sep="<br>")
) %>% plot_ly(.,
x=~last_time,
y=~Participant,
type="scatter",
mode="markers",
color=~factor(include_ppt),
colors=brewer.pal(7,"Set1"),
marker = list(size = 10),
text=~text,
hoverinfo="text"
)
tdat_binned %<>% filter(Condition!="Filler") %>%
left_join(.,ppt_info) %>% left_join(.,ppt_trial_info) #%>%
tdat %<>% filter(Condition!="Filler") %>%
left_join(.,ppt_info) %>% left_join(.,ppt_trial_info) #%>%
object_clicks %>% filter(fluency!="Filler") %>%
left_join(.,ppt_info) %>% left_join(.,ppt_trial_info) -> object_clicks
ppt_info %>% filter(include_ppt=="valid") %>%
select(duplicate2, bilingual2) %>% table
source("~/Desktop/git_repositories/jkr/R/BSmake_tcplotdata.R")
######
#PLOT
########
tdat_binned %>%
filter(include_ppt=="valid",
include_trial=="valid",
grepl("No",bilingual),
duplicate2=="n-dup") %>%
mutate(CURRENT_BIN = time/20,
referent=refprop,
distractor=disprop) %>%
BSmake_tcplotdata(.,AOIs=c(referent,distractor),subj=Participant,Condition,n=1000) %>%
mutate(
Object = fct_recode(AOI,"Distractor"="disprop","Referent"="refprop")
) %>%
tcplot(lty=Condition)+
ylab("proportion cumulative movement towards objects")
source("mousetrack_processing.R")
#source("mousetrack_processing.R")
MTURKppt_info<-ppt_info
MTURKppt_trial_info<-ppt_trial_info
MTURKtdat_binned<-tdat_binned
source("mousetrack_processing_LAB.R")
ppt_info
require(lme4)
source("mousetrack_processing.R")
#source("mousetrack_processing.R")
MTURKppt_info<-ppt_info %>%
mutate(
Participant=paste0("Mturk_",Participant)
)
MTURKppt_trial_info<-ppt_trial_info %>%
mutate(
Participant=paste0("Mturk_",Participant)
)
MTURKtdat_binned<-tdat_binned %>%
mutate(
Participant=paste0("Mturk_",Participant)
)
MTURKppt_trial_info<-ppt_trial_info %>% ungroup %>%
mutate(
Participant=paste0("Mturk_",Participant)
)
MTURKtdat_binned<-tdat_binned %>% ungroup %>%
mutate(
Participant=paste0("Mturk_",Participant)
)
source("mousetrack_processing_LAB.R")
ppt_info <- ppt_info %>% mutate(
Participant=paste0("LAB_",Participant)
)
ppt_trial_info <- ppt_trial_info %>% ungroup %>% mutate(
Participant=paste0("LAB_",Participant)
)
tdat_binned <- tdat_binned %>% ungroup %>% mutate(
Participant=paste0("LAB_",Participant)
)
## JOIN
bind_rows(MTURKppt_info, ppt_info)
MTURKppt_info
ppt_info
## JOIN
ppt_info <- bind_rows(MTURKppt_info, ppt_info)
ppt_trial_info <- bind_rows(MTURKppt_trial_info, ppt_trial_info)
ppt_trial_info
mtrack_data <- bind_rows(MTURKtdat_binned,tdat_binned)
ppt_info %>% filter(include_ppt=="valid") %>%
select(duplicate2, bilingual2) %>% table
#how long did people take?
ppt_info %>% filter(include_ppt=="valid", duplicate2=="n-dup") %>%
pull(time_taken) %>% as.numeric() %>% summary
#what hours do mturkers work? :)
ppt_info$hourstart = lubridate::hour(ppt_info$first_time1)
ggplot(ppt_info,aes(x=hourstart))+geom_histogram(bins=24) -> timeofday
timeofday
source("~/Desktop/git_repositories/jkr/R/BSmake_tcplotdata.R")
mtrack_data$Participant
######
#PLOT
########
mtrack_data <- mutate(mtrackdata,expt=ifelse(grepl("Mturk",Participant),"mturk","lab"))
######
#PLOT
########
mtrack_data <- mutate(mtrack_data,expt=ifelse(grepl("Mturk",Participant),"mturk","lab"))
mtrack_Data %>%
filter(include_ppt=="valid",
include_trial=="valid",
grepl("No",bilingual),
duplicate2=="n-dup") %>%
mutate(CURRENT_BIN = time/20,
referent=refprop,
distractor=disprop) %>%
BSmake_tcplotdata(.,AOIs=c(referent,distractor),subj=Participant,Condition,expt,n=1000) %>%
mutate(
Object = fct_recode(AOI,"Distractor"="disprop","Referent"="refprop")
) %>%
tcplot(lty=Condition)+facet_wrap(~expt)+
ylab("proportion cumulative movement towards objects")
mtrack_data %>%
filter(include_ppt=="valid",
include_trial=="valid",
grepl("No",bilingual),
duplicate2=="n-dup") %>%
mutate(CURRENT_BIN = time/20,
referent=refprop,
distractor=disprop) %>%
BSmake_tcplotdata(.,AOIs=c(referent,distractor),subj=Participant,Condition,expt,n=1000) %>%
mutate(
Object = fct_recode(AOI,"Distractor"="disprop","Referent"="refprop")
) %>%
tcplot(lty=Condition)+facet_wrap(~expt)+
ylab("proportion cumulative movement towards objects")
mtrack_data %>%
filter(include_ppt=="valid",
include_trial=="valid",
grepl("No",bilingual),
duplicate2=="n-dup") %>%
mutate(CURRENT_BIN = time/20,
referent=refprop,
distractor=disprop) %>%
BSmake_tcplotdata(.,AOIs=c(referent,distractor),subj=Participant,Condition,expt,n=1000) %>%
mutate(
Object = fct_recode(AOI,"Distractor"="disprop","Referent"="refprop")
) %>%
tcplot(lty=Condition)+facet_wrap(~expt)+
ylab("proportion cumulative movement towards objects")
########
#MODEL
########
model.data <- mtrack_data %>%
filter(include_ppt=="valid",include_trial=="valid",duplicate2=="n-dup",grepl("No",bilingual)) %>%
mutate(
time_s = time/1000,
sub = Participant,
ref = Trial,
fluency = Condition,
Cref = refprop,
Cdis = disprop,
N=1,
Relog = log(Cref + .5/ (N - Cref + .5)),
Delog = log(Cdis + .5/ (N - Cdis + .5)),
elog_bias = Relog - Delog,
C_difference = abs(Cref - Cdis),
wts =  1/(C_difference + .5) + 1/(N - C_difference + .5),
fluency = factor(fluency),
time_z = scale(time_s)[,1]
) %>% filter(time_s<=0.8) %>% ungroup -> aggdat
aggdat$fluency<-relevel(aggdat$fluency,ref="Fluent")
contrasts(aggdat$fluency)[,1]<-c(-.5,.5)
model_mouse<-lmer(elog_bias~fluency*time_z*expt+(1+fluency*time_z|sub)+(1+time_z|ref),aggdat)
summary(model_mouse)
#####
#GAMMs
#####
require(mgcv)
require(itsadug)
aggdat %>% mutate(
CURRENT_BIN = time_s/0.02,
fitted=fitted(model_mouse)
) %>% make_tcplotdata(.,c(elog_bias,fitted),sub,fluency,expt) -> plotdat
ggplot(plotdat,aes(x=time,col=fluency,fill=fluency))+
geom_point(data=plotdat[!grepl("fitted",plotdat$AOI),],aes(y=mean_prop))+
geom_errorbar(data=plotdat[!grepl("fitted",plotdat$AOI),],aes(ymin=low,ymax=up),alpha=0.7)+
geom_line(data=plotdat[grepl("fitted",plotdat$AOI),],aes(y=mean_prop))+
scale_colour_manual(values=c("#2171B5","#31A354"))+
scale_fill_manual(values=c("#2171B5","#31A354"))+
ylab("Empirical logit transformed movement bias toward\nreferent over distractor")+
xlab("Time (ms) relative to referent onset")+
theme_bw()+
facet_wrap(~expt)+
theme(text = element_text(size=16),legend.position = "bottom")+
ggtitle("Mouse movements")+
NULL
mtrack_data %>%
filter(include_ppt=="valid",include_trial=="valid",duplicate2=="n-dup",grepl("No",bilingual)) %>%
mutate(
CURRENT_BIN=time/20,
Time=time,
Relog = log(refprop + .5/ (1 - refprop + .5)),
Delog = log(disprop + .5/ (1 - disprop + .5)),
elog_bias = Relog - Delog,
sub = Participant,
ref = Trial,
Condition=factor(Condition)
) %>% filter(Time <= 2000) %>% ungroup-> dat
dat$Condition<-as.ordered(dat$Condition)
contrasts(dat$Condition)<-"contr.treatment"
dat$expt<-as.ordered(dat$expt)
contrasts(dat$expt)<-"contr.treatment"
m2<-bam(elog_bias~s(Time)+s(Time,by=Condition)+s(Time,Condition,by=expt),#+
#s(Time,sub,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat)
m2<-bam(elog_bias~s(Time)+s(Time,by=Condition)+s(Time,by=expt),#+
#s(Time,sub,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat)
plot_smooth(m2,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
plot_diff(m2,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot(density(dat$elog_bias))
mtrack_data$refprop
hist(mtrack_data$refprop)
mtrack_data %>%
filter(include_ppt=="valid",include_trial=="valid",duplicate2=="n-dup",grepl("No",bilingual)) %>%
mutate(
CURRENT_BIN=time/20,
Time=time,
Relog = log(refprop + .5/ (1 - refprop + .5)),
Delog = log(disprop + .5/ (1 - disprop + .5)),
elog_bias = Relog - Delog,
movingto = ifelse(refprop>.5,"ref",
ifelse(disprop>.5,"dis","neither")),
sub = Participant,
ref = Trial,
Condition=factor(Condition)
) %>% filter(Time <= 2000) %>% ungroup-> dat
summary(dat$movingto)
summary(factor(dat$movingto))
dat$Condition<-as.ordered(dat$Condition)
contrasts(dat$Condition)<-"contr.treatment"
dat$expt<-as.ordered(dat$expt)
contrasts(dat$expt)<-"contr.treatment"
moc1A = bam(movingto~s(Time)+s(Time,by=Condition),
data=dat,family=ocat(R=3))
mtrack_data %>%
filter(include_ppt=="valid",include_trial=="valid",duplicate2=="n-dup",grepl("No",bilingual)) %>%
mutate(
CURRENT_BIN=time/20,
Time=time,
Relog = log(refprop + .5/ (1 - refprop + .5)),
Delog = log(disprop + .5/ (1 - disprop + .5)),
elog_bias = Relog - Delog,
moving = factor(ifelse(refprop>.5,"ref",
ifelse(disprop>.5,"dis","neither"))),
movingO = as.numeric(moving),
sub = Participant,
ref = Trial,
Condition=factor(Condition)
) %>% filter(Time <= 2000) %>% ungroup-> dat
dat$Condition<-as.ordered(dat$Condition)
contrasts(dat$Condition)<-"contr.treatment"
dat$expt<-as.ordered(dat$expt)
contrasts(dat$expt)<-"contr.treatment"
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
data=dat,family=ocat(R=3))
plot(moc1A)
plot_diff(moc1A)
plot_diff(moc1A,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot(moc1A,select=2)
moc1A = bam(movingO~s(Time)+s(Time,by=Condition)+
s(Time,sub,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition)+
s(Time,ref,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition)+
s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition)+
#s(Time,ref,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
#s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
mtrack_data %>%
filter(include_ppt=="valid",include_trial=="valid",duplicate2=="n-dup",grepl("No",bilingual)) %>%
mutate(
CURRENT_BIN=time/20,
Time=time,
Relog = log(refprop + .5/ (1 - refprop + .5)),
Delog = log(disprop + .5/ (1 - disprop + .5)),
elog_bias = Relog - Delog,
moving = factor(ifelse(refprop>.5,"ref",
ifelse(disprop>.5,"dis","neither"))),
movingO = as.numeric(moving),
sub = factor(Participant),
ref = factor(Trial),
Condition=factor(Condition)
) %>% filter(Time <= 2000) %>% ungroup-> dat
dat$Condition<-as.ordered(dat$Condition)
contrasts(dat$Condition)<-"contr.treatment"
dat$expt<-as.ordered(dat$expt)
contrasts(dat$expt)<-"contr.treatment"
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
s(Time,ref,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
s(Time,ref,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition)+
s(Time,ref,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition)+
#s(Time,ref,by=Condition,bs="fs",m=1)+
s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
#s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
warnings
warnings()
plot_smooth(moc1A,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
moc1A = bam(movingO~Condition+s(Time)+s(Time,by=Condition),
#s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
plot_smooth(moc1A,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
moc1A = bam(movingO~s(Time)+s(Time,by=Condition),
#s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
mtrack_data %>%
filter(include_ppt=="valid",include_trial=="valid",duplicate2=="n-dup",grepl("No",bilingual)) %>%
mutate(
CURRENT_BIN=time/20,
Time=time,
Relog = log(refprop + .5/ (1 - refprop + .5)),
Delog = log(disprop + .5/ (1 - disprop + .5)),
elog_bias = Relog - Delog,
moving = factor(ifelse(refprop>.5,"ref",
ifelse(disprop>.5,"dis","neither"))),
movingO = as.numeric(moving),
sub = factor(Participant),
ref = factor(Trial),
Condition=factor(Condition)
) %>% filter(Time <= 2000) %>% ungroup-> dat
dat$ConditionO<-as.ordered(dat$Condition)
contrasts(dat$ConditionO)<-"contr.treatment"
dat$expt<-as.ordered(dat$expt)
contrasts(dat$expt)<-"contr.treatment"
moc1A = bam(movingO~Condition+s(Time)+s(Time,by=Condition),
#s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
plot(moc1A,select=2)
plot_diff(moc1A,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot_smooth(moc1A,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
moc1B = bam(movingO~s(Time)+s(Time,by=ConditionO),
#s(Time,ref,by=Condition,bs="fs",m=1)+
#s(Time,sub,by=Condition,bs="fs",m=1),
data=dat,family=ocat(R=3))
plot(moc1B,select=2)
plot_diff(moc1B,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot_smooth(moc1B,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
plot(moc1B,select=2)
plot_diff(moc1B,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot_smooth(moc1B,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
plot_smooth(moc1B,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
plot_diff(moc1B,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot_smooth(moc1B,view="Time", plot_all="ConditionO", rug=FALSE,rm.ranef=TRUE)
plot_diff(moc1B,"Time",comp=list(ConditionO=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot_smooth(moc1B,view="Time", plot_all="ConditionO", rug=FALSE,rm.ranef=TRUE)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(-2,2)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(-4,4)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(0,3)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(0,3)+
facet_wrap(~Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,elog_bias,sub,Condition) %>% tcplot()+ylim(0,3)+
facet_wrap(~Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,elog_bias,sub,Condition) %>% tcplot()+ylim(0,1)+
facet_wrap(~Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,elog_bias,sub,Condition) %>% tcplot()+ylim(-1,1)+
facet_wrap(~Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(0,3)+
facet_wrap(~Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,elog_bias,sub,Condition) %>% tcplot()+ylim(-1,1)+
facet_wrap(~Condition)
gam.check(moc1A)
summary(moc1A)
summary(moc1B)
gam.check(moc1B)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,ConditionO) %>% tcplot()+ylim(0,3)+
facet_wrap(~Condition)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,ConditionO) %>% tcplot()+ylim(0,3)+
facet_wrap(~ConditionO)
plot_smooth(moc1B,view="Time", plot_all="ConditionO", rug=FALSE,rm.ranef=TRUE)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(0,3)+
facet_wrap(~Condition)
plot_smooth(moc1B,view="Time", plot_all="ConditionO", rug=FALSE,rm.ranef=TRUE)
plot_diff(moc1B,"Time",comp=list(ConditionO=c("Fluent","Disfluent")),rm.ranef=TRUE)
dat %>% mutate(CURRENT_BIN = time/20) %>%
make_tcplotdata(.,movingO,sub,Condition) %>% tcplot()+ylim(0,3)+
facet_wrap(~Condition)
summary(moc1B)
gam.check(moc1B)
plot_diff(moc1A,"Time",comp=list(Condition=c("Fluent","Disfluent")),rm.ranef=TRUE)
plot_smooth(moc1A,view="Time", plot_all="Condition", rug=FALSE,rm.ranef=TRUE)
